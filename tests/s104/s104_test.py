from collections import namedtuple
import pytest

import os

import datetime
import numpy
import h5py

try:
    from osgeo import gdal, ogr
except ModuleNotFoundError:
    import gdal, ogr

from s100py.s104 import v1_0
from s100py.s104 import v1_1

path_to_current_file = os.path.realpath(__file__)
current_directory = os.path.dirname(path_to_current_file)


@pytest.fixture(scope="module", params=[v1_0, v1_1])
def s104(request):
    yield request.param


def h5py_string_comp(h5py_val, cmp_str):
    # h5py <3.0 returns a string, >3.0 returns bytes
    return h5py_val in (cmp_str, bytes(cmp_str, "utf-8"))


InputData = namedtuple(
    'InputData',
    ['height_dcf2_001',
     'trend_dcf2_001',
     'height_dcf2_002',
     'grid_properties_dcf2',
     'height_dcf3_dcf7_001',
     'height_dcf3_dcf7_002',
     'height_dcf3_dcf7_003',
     'trend_dcf3_dcf7_001',
     'lon',
     'lat',
     'adjacency',
     'triangles',
     'grid_properties_dcf3_dcf7',
     'datetime_forecast_issuance',
     'datetime_interval',
     'metadata_1_0_dcf2',
     'metadata_1_1_dcf2',
     'metadata_1_1_dcf3',
     'metadata_1_1_dcf7',
     'update_meta_dcf2',
     'update_meta_dcf3_dcf7',
     'expected_chunks',
     'expected_groupf'])


@pytest.fixture(scope="module")
def input_data(s104):
    height_dcf2_001 = numpy.array([
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.2, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, -9999., 0.23, 0.24, 0.22, 0.19,
         0.2, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, -9999.,
         -9999., -9999., -9999., -9999., 0.28, 0.23,
         0.21, 0.2, 0.2, 0.19, 0.19, 0.19,
         0.19, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.25, -9999.,
         -9999., -9999., -9999., -9999., -9999., 0.29,
         0.26, 0.21, 0.2, 0.2, 0.19, 0.19,
         0.19, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.23, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         0.29, 0.23, 0.2, 0.2, 0.2, 0.19,
         0.19, 0.19, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, -9999., -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.26, 0.23, 0.2, 0.2, 0.19,
         0.19, 0.19, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, -9999., -9999., -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.27, 0.22, 0.2, 0.2,
         0.19, 0.19, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, -9999., -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., -9999., 0.23, 0.21, 0.2,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.17, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.2, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., -9999., 0.22, 0.21, 0.2,
         0.2, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.2, 0.2, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.25, 0.21, 0.21, 0.2,
         0.2, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.2, 0.2, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.23, 0.21, 0.21, 0.2,
         0.2, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.2, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.21, 0.21, 0.2, 0.2,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, 0.19, 0.2, -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.24, 0.21, 0.21, 0.2, 0.2,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.2,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.23, 0.21, 0.2, 0.2, 0.2,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.22, 0.2, 0.2, 0.2, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.2, -9999., -9999., 0.2,
         0.2, 0.2, 0.2, 0.2, 0.2, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.17, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.2, 0.2,
         0.2, 0.2, 0.2, 0.2, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.17, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.17, 0.17, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19],
        [0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
         0.18, 0.18, 0.18, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19, 0.19, 0.19, 0.19, 0.19, 0.19,
         0.19]])

    trend_dcf2_001 = numpy.array([
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])

    height_dcf2_002 = numpy.array([
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.15, 0.15, 0.15, 0.15, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.17, 0.18, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, -9999., 0.21, 0.22, 0.2, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.15, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.17, -9999.,
         -9999., -9999., -9999., -9999., 0.26, 0.21,
         0.19, 0.18, 0.17, 0.17, 0.17, 0.17,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.15, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.17, 0.23, -9999.,
         -9999., -9999., -9999., -9999., -9999., 0.27,
         0.24, 0.19, 0.18, 0.17, 0.17, 0.17,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.15, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.17, 0.17, 0.21, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         0.27, 0.21, 0.18, 0.18, 0.17, 0.17,
         0.17, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.17, 0.17, -9999., -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.24, 0.21, 0.18, 0.18, 0.17,
         0.17, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.17, 0.17, -9999., -9999., -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.25, 0.2, 0.18, 0.17,
         0.17, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.17, -9999., -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., -9999., 0.2, 0.18, 0.18,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.17, 0.18, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., -9999., 0.2, 0.18, 0.18,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.18, 0.18, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.22, 0.19, 0.18, 0.18,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.18, 0.18, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.21, 0.19, 0.18, 0.18,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.17, 0.18, -9999., -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., -9999., 0.19, 0.18, 0.18, 0.18,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.17, 0.17, 0.17, 0.17, 0.17, -9999.,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.21, 0.19, 0.18, 0.18, 0.17,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.21, 0.18, 0.18, 0.18, 0.17,
         0.17, 0.17, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.17, 0.17, 0.17, 0.17, 0.17,
         -9999., -9999., -9999., -9999., -9999., -9999.,
         -9999., 0.2, 0.18, 0.18, 0.17, 0.17,
         0.17, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.15, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, -9999., -9999., 0.18,
         0.18, 0.18, 0.18, 0.17, 0.17, 0.17,
         0.17, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.18, 0.18, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.15, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.17, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.15, 0.15, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.15, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.17, 0.17, 0.17, 0.17,
         0.17],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17],
        [0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.16, 0.16, 0.16,
         0.16, 0.16, 0.16, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
         0.17]])

    grid_properties_dcf2 = {
        'maxx': -169.555489,
        'minx': -170.150285,
        'miny': -19.199546,
        'maxy': -18.208768,
        'cellsize_x': 0.0138324559534882,
        'cellsize_y': 0.0139546193943669,
        'nx': 71,
        'ny': 43
    }

    height_dcf3_dcf7_001 = numpy.array([1.15, 0.74, 1.02, 0.32, 0.51, 0.7, 0.89, 0.1, 0.28, 0.48])

    trend_dcf3_dcf7_001 = numpy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

    height_dcf3_dcf7_002 = numpy.array([1.63, 1.22, 1.50, 0.80, 0.99, 1.18, 1.37, 0.58, 0.77, 0.96])

    height_dcf3_dcf7_003 = numpy.array([2.00, 1.58, 1.87, 1.17, 1.36, 1.55, 1.74, 0.94, 1.13, 1.32])

    lon = numpy.array([-74.89039612, -75.00689697,
                      -74.65739441, -75.12339783,
                      -74.89039612, -74.65739441,
                      -74.42440033, -75.00689697,
                      -74.77389526, -74.54090118])

    lat = numpy.array([34.15879822, 33.96179962,
                      33.96179962, 33.76479721,
                      33.76479721, 33.76479721,
                      33.76479721, 33.56779861,
                      33.56779861, 33.56779861])

    adjacency = numpy.array([
     [-1,  2, -1],
     [-1,  4, 2],
     [1,  3,  0],
     [2,  6, -1],
     [-1,  5, 1],
     [4, -1,  6],
     [5,  7,  3],
     [6, -1,  8],
     [7, -1, -1]])

    triangles = numpy.array([
     [0,  1,  2],
     [1,  3,  4],
     [1,  4,  2],
     [2,  4,  5],
     [3,  7,  4],
     [4,  7,  8],
     [4,  8,  5],
     [5,  8,  9],
     [5, 9,   8]])

    grid_properties_dcf3_dcf7 = {
     'maxx': -75.1234,
     'minx': -74.4244,
     'miny': 33.5678,
     'maxy': 34.1588,
     'nodes': 10,
     'num_triangles': 9,
     'latitude': lat,
     'longitude': lon,
     'adjacency': adjacency,
     'triangles': triangles
    }

    datetime_forecast_issuance = datetime.datetime(2021, 9, 1, 0, 0, 0)

    datetime_interval = datetime.timedelta(seconds=3600)

    metadata_1_0_dcf2 = {
        'horizontalCRS': 4326,
        'geographicIdentifier': 'Samoa Islands',
        'waterLevelHeightUncertainty': -1.0,
        'verticalUncertainty': -1.0,
        'horizontalPositionUncertainty': -1.0,
        'timeUncertainty': -1.0,
        'waterLevelTrendThreshold': 0.02,
        'verticalCS': 6499,
        'verticalCoordinateBase': 2,
        'verticalDatumReference': 1,
        'verticalDatum': 12,
        'commonPointRule': 4,
        'interpolationType': 10,
        'typeOfWaterLevelData': 5,
        'methodWaterLevelProduct': 'ADCIRC_Hydrodynamic_Model_Forecasts',
        'datetimeOfFirstRecord': '2021-09-01T01:00:00'
    }

    metadata_1_1_dcf2 = {
        'horizontalCRS': 4326,
        'geographicIdentifier': 'Samoa Islands',
        'waterLevelHeightUncertainty': -1.0,
        'verticalUncertainty': -1.0,
        'horizontalPositionUncertainty': -1.0,
        'waterLevelTrendThreshold': 0.02,
        'verticalCS': 6499,
        'verticalDatumReference': 1,
        'verticalDatum': 12,
        'commonPointRule': 4,
        'interpolationType': 10,
        'dataDynamicity': 5,
        'methodWaterLevelProduct': 'ADCIRC_Hydrodynamic_Model_Forecasts',
        'datetimeOfFirstRecord': '20210901T010000Z',
        'datasetDeliveryInterval': 'PT6H',
        'trendInterval': 60,
        'issueDateTime': datetime_forecast_issuance,
    }

    metadata_1_1_dcf3 = {
        'horizontalCRS': 4326,
        'geographicIdentifier': 'Chesapeake Bay',
        'waterLevelHeightUncertainty': -1.0,
        'verticalUncertainty': -1.0,
        'horizontalPositionUncertainty': -1.0,
        'waterLevelTrendThreshold': 0.02,
        'verticalCS': 6499,
        'verticalDatumReference': 1,
        'verticalDatum': 12,
        'commonPointRule': 4,
        'interpolationType': 10,
        'dataDynamicity': 5,
        'methodWaterLevelProduct': 'ROMS_Hydrodynamic_Model_Forecasts',
        'datetimeOfFirstRecord': '20210901T010000Z',
        'datasetDeliveryInterval': 'PT6H',
        'trendInterval': 60,
        'issueDateTime': datetime_forecast_issuance,
    }

    metadata_1_1_dcf7 = {
        'horizontalCRS': 4326,
        'geographicIdentifier': 'Chesapeake Bay',
        'waterLevelHeightUncertainty': -1.0,
        'verticalUncertainty': -1.0,
        'horizontalPositionUncertainty': -1.0,
        'waterLevelTrendThreshold': 0.2,
        'verticalCS': 6499,
        'verticalDatumReference': 1,
        'verticalDatum': 12,
        'commonPointRule': 4,
        'interpolationType': 9,
        'dataDynamicity': 5,
        'methodWaterLevelProduct': 'TIN model',
        'datetimeOfFirstRecord': '20210901T010000Z',
        'datasetDeliveryInterval': 'PT6H',
        'trendInterval': 60,
        'issueDateTime': datetime_forecast_issuance,
    }

    update_meta_dcf2 = {
        'dateTimeOfLastRecord': '20210901T020000Z',
        'numberOfGroups': 2,
        'numberOfTimes': 2,
        'timeRecordInterval': 3600,
        'num_instances': 1
    }

    update_meta_dcf3_dcf7 = {
        'dateTimeOfLastRecord': '20210901T030000Z',
        'numberOfGroups': 3,
        'numberOfTimes': 3,
        'timeRecordInterval': 3600,
        'num_instances': 1
    }

    expected_chunks = '36,43'

    expected_groupf = numpy.array([
        ('waterLevelHeight', 'Water level height', 'metres', '-9999', 'H5T_FLOAT', '-99.99', '99.99', 'closedInterval'),
        ('waterLevelTrend', 'Water level trend', '', '0', 'H5T_ENUM', '', '', ''),
        ('waterLevelTime', 'Water level time', 'DateTime', '', 'H5T_STRING', '19000101T000000Z', '21500101T000000Z', 'closedInterval')],
        dtype=[('code', 'O'), ('name', 'O'), ('uom.name', 'O'), ('fillValue', 'O'), ('datatype', 'O'), ('lower', 'O'), ('upper', 'O'), ('closure', 'O')])
    if s104.EDITION == 1.1:
        expected_groupf = numpy.array([
            ('waterLevelHeight', 'Water Level Height', 'metres', '-9999.00', 'H5T_FLOAT', '-99.99', '99.99', 'closedInterval'),
            ('waterLevelTrend', 'Water Level Trend', '', '0', 'H5T_ENUM', '', '', ''),
            ('waterLevelTime', 'Water Level Time', 'DateTime', '', 'H5T_STRING', '19000101T000000Z', '21500101T000000Z', 'closedInterval')],
            dtype=[('code', 'O'), ('name', 'O'), ('uom.name', 'O'), ('fillValue', 'O'), ('datatype', 'O'), ('lower', 'O'), ('upper', 'O'), ('closure', 'O')])

    return InputData(height_dcf2_001, trend_dcf2_001, height_dcf2_002, grid_properties_dcf2, height_dcf3_dcf7_001,
                     height_dcf3_dcf7_002, height_dcf3_dcf7_003, trend_dcf3_dcf7_001, lon, lat, adjacency, triangles,
                     grid_properties_dcf3_dcf7, datetime_forecast_issuance, datetime_interval, metadata_1_0_dcf2,
                     metadata_1_1_dcf2, metadata_1_1_dcf3, metadata_1_1_dcf7, update_meta_dcf2, update_meta_dcf3_dcf7,
                     expected_chunks, expected_groupf)


def test_create_s104_dcf2(s104, input_data):
    data_file = s104.utils.create_s104(f"{current_directory}/test_s104_dcf2_{s104.EDITION}.h5", 2)
    water_level_trend_threshold = 0.2

    if s104.EDITION == 1.0:
        s104.utils.add_metadata(input_data.metadata_1_0_dcf2, data_file)
        water_level_trend_threshold = input_data.metadata_1_0_dcf2['waterLevelTrendThreshold']
    elif s104.EDITION == 1.1:
        s104.utils.add_metadata(input_data.metadata_1_1_dcf2, data_file)
        water_level_trend_threshold = input_data.metadata_1_1_dcf2['waterLevelTrendThreshold']

    data_series_time_001 = input_data.datetime_forecast_issuance + input_data.datetime_interval
    s104.utils.add_data_from_arrays(input_data.height_dcf2_001, input_data.trend_dcf2_001, data_file,
                                    input_data.grid_properties_dcf2, data_series_time_001, 2)

    trend = numpy.round((input_data.height_dcf2_002 - input_data.height_dcf2_001), decimals=2)

    trend_002 = numpy.where((-1 * water_level_trend_threshold < trend) &
                            (trend < water_level_trend_threshold), 3,
                            numpy.where(trend >= water_level_trend_threshold, 2,
                                        numpy.where(trend <= -1 * water_level_trend_threshold, 1, numpy.any(trend))))

    data_series_time_002 = data_series_time_001 + input_data.datetime_interval
    s104.utils.add_data_from_arrays(input_data.height_dcf2_002, trend_002, data_file, input_data.grid_properties_dcf2,
                                    data_series_time_002, 2)
    s104.utils.update_metadata(data_file, input_data.grid_properties_dcf2, input_data.update_meta_dcf2)

    s104.utils.write_data_file(data_file)

    assert os.path.isfile(f"{current_directory}/test_s104_dcf2_{s104.EDITION}.h5")
    h5_file = h5py.File(f"{current_directory}/test_s104_dcf2_{s104.EDITION}.h5", "r")

    assert 'Group_F/WaterLevel' in h5_file
    assert 'Group_F/featureCode' in h5_file
    assert 'WaterLevel/WaterLevel.01/uncertainty' in h5_file
    assert 'WaterLevel/axisNames' in h5_file
    if s104.EDITION == 1.0:
        assert h5_file['Group_F/WaterLevel'].attrs['chunking'] == input_data.expected_chunks
    assert h5_file['WaterLevel/WaterLevel.01/Group_001/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf2_001)
    assert h5_file['WaterLevel/WaterLevel.01/Group_002/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf2_002)
    assert h5_file['WaterLevel/WaterLevel.01/Group_001/values']['waterLevelTrend'] == pytest.approx(input_data.trend_dcf2_001)
    assert h5_file['WaterLevel/WaterLevel.01/Group_002/values']['waterLevelTrend'] == pytest.approx(trend_002)
    assert h5_file['WaterLevel/WaterLevel.01/'].attrs['numPointsLongitudinal'] == input_data.height_dcf2_001.shape[0]
    assert h5_file['WaterLevel/WaterLevel.01/'].attrs['numPointsLatitudinal'] == input_data.height_dcf2_001.shape[1]
    assert h5_file.attrs['eastBoundLongitude'] == pytest.approx(input_data.grid_properties_dcf2['maxx'])
    assert h5_file.attrs['westBoundLongitude'] == pytest.approx(input_data.grid_properties_dcf2['minx'])
    assert h5_file.attrs['northBoundLatitude'] == pytest.approx(input_data.grid_properties_dcf2['maxy'])
    assert h5_file.attrs['southBoundLatitude'] == pytest.approx(input_data.grid_properties_dcf2['miny'])

    assert all([h5py_string_comp(actual, expected) for actual, expected in zip(h5_file['Group_F/WaterLevel'][()][0],
                                                                               input_data.expected_groupf[0])])
    assert all([h5py_string_comp(actual, expected) for actual, expected in zip(h5_file['Group_F/WaterLevel'][()][1],
                                                                               input_data.expected_groupf[1])])
    assert all([h5py_string_comp(actual, expected) for actual, expected in zip(h5_file['Group_F/WaterLevel'][()][2],
                                                                               input_data.expected_groupf[2])])


def test_create_s104_dcf3(s104, input_data):
    if s104.EDITION == 1.1:
        data_file = s104.utils.create_s104(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.h5", 3)

        s104.utils.add_metadata(input_data.metadata_1_1_dcf3, data_file)
        water_level_trend_threshold = input_data.metadata_1_1_dcf3['waterLevelTrendThreshold']

        data_series_time_001 = input_data.datetime_forecast_issuance + input_data.datetime_interval
        s104.utils.add_data_from_arrays(input_data.height_dcf3_dcf7_001, input_data.trend_dcf3_dcf7_001, data_file,
                                        input_data.grid_properties_dcf3_dcf7, data_series_time_001, 3)

        trend = numpy.round((input_data.height_dcf3_dcf7_002 - input_data.height_dcf3_dcf7_001), decimals=2)

        trend_002 = numpy.where((-1 * water_level_trend_threshold < trend) &
                                (trend < water_level_trend_threshold), 3,
                                numpy.where(trend >= water_level_trend_threshold, 2,
                                            numpy.where(trend <= -1 * water_level_trend_threshold, 1, numpy.any(trend))))

        data_series_time_002 = data_series_time_001 + input_data.datetime_interval
        s104.utils.add_data_from_arrays(input_data.height_dcf3_dcf7_002, trend_002, data_file,
                                        input_data.grid_properties_dcf3_dcf7, data_series_time_002, 3)

        trend = numpy.round((input_data.height_dcf3_dcf7_003 - input_data.height_dcf3_dcf7_002), decimals=2)

        trend_003 = numpy.where((-1 * water_level_trend_threshold < trend) &
                                (trend < water_level_trend_threshold), 3,
                                numpy.where(trend >= water_level_trend_threshold, 2,
                                            numpy.where(trend <= -1 * water_level_trend_threshold, 1,
                                                        numpy.any(trend))))

        data_series_time_003 = data_series_time_002 + input_data.datetime_interval
        s104.utils.add_data_from_arrays(input_data.height_dcf3_dcf7_003, trend_003, data_file,
                                        input_data.grid_properties_dcf3_dcf7, data_series_time_003, 3)

        s104.utils.update_metadata(data_file, input_data.grid_properties_dcf3_dcf7, input_data.update_meta_dcf3_dcf7)

        s104.utils.write_data_file(data_file)

        assert os.path.isfile(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.h5")
        h5_file = h5py.File(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.h5", "r")

        assert 'Group_F/WaterLevel' in h5_file
        assert 'Group_F/featureCode' in h5_file
        assert 'WaterLevel/WaterLevel.01/uncertainty' in h5_file
        assert 'WaterLevel/axisNames' in h5_file
        assert h5_file['WaterLevel/WaterLevel.01/Group_001/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf3_dcf7_001)
        assert h5_file['WaterLevel/WaterLevel.01/Group_002/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf3_dcf7_002)
        assert h5_file['WaterLevel/WaterLevel.01/Group_003/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf3_dcf7_003)
        assert h5_file['WaterLevel/WaterLevel.01/Group_001/values']['waterLevelTrend'] == pytest.approx(input_data.trend_dcf3_dcf7_001)
        assert h5_file['WaterLevel/WaterLevel.01/Group_002/values']['waterLevelTrend'] == pytest.approx(trend_002)
        assert h5_file['WaterLevel/WaterLevel.01/Group_003/values']['waterLevelTrend'] == pytest.approx(trend_003)
        assert h5_file['WaterLevel/WaterLevel.01'].attrs['numberOfNodes'] == input_data.height_dcf3_dcf7_001.size
        assert h5_file['WaterLevel/WaterLevel.01/Positioning/geometryValues']['longitude'] == pytest.approx(input_data.lon)
        assert h5_file['WaterLevel/WaterLevel.01/Positioning/geometryValues']['latitude'] == pytest.approx(input_data.lat)
        assert h5_file.attrs['eastBoundLongitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['maxx'])
        assert h5_file.attrs['westBoundLongitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['minx'])
        assert h5_file.attrs['northBoundLatitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['maxy'])
        assert h5_file.attrs['southBoundLatitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['miny'])


def test_create_s104_dcf7(s104, input_data):
    if s104.EDITION == 1.1:
        data_file = s104.utils.create_s104(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.h5", 7)

        s104.utils.add_metadata(input_data.metadata_1_1_dcf7, data_file)
        water_level_trend_threshold = input_data.metadata_1_1_dcf7['waterLevelTrendThreshold']

        data_series_time_001 = input_data.datetime_forecast_issuance + input_data.datetime_interval
        s104.utils.add_data_from_arrays(input_data.height_dcf3_dcf7_001, input_data.trend_dcf3_dcf7_001, data_file,
                                        input_data.grid_properties_dcf3_dcf7, data_series_time_001, 7)

        trend = numpy.round((input_data.height_dcf3_dcf7_002 - input_data.height_dcf3_dcf7_001), decimals=2)

        trend_002 = numpy.where((-1 * water_level_trend_threshold < trend) &
                                (trend < water_level_trend_threshold), 3,
                                numpy.where(trend >= water_level_trend_threshold, 2,
                                            numpy.where(trend <= -1 * water_level_trend_threshold, 1, numpy.any(trend))))

        data_series_time_002 = data_series_time_001 + input_data.datetime_interval
        s104.utils.add_data_from_arrays(input_data.height_dcf3_dcf7_002, trend_002, data_file,
                                        input_data.grid_properties_dcf3_dcf7, data_series_time_002, 7)

        trend = numpy.round((input_data.height_dcf3_dcf7_003 - input_data.height_dcf3_dcf7_002), decimals=2)

        trend_003 = numpy.where((-1 * water_level_trend_threshold < trend) &
                                (trend < water_level_trend_threshold), 3,
                                numpy.where(trend >= water_level_trend_threshold, 2,
                                            numpy.where(trend <= -1 * water_level_trend_threshold, 1,
                                                        numpy.any(trend))))

        data_series_time_003 = data_series_time_002 + input_data.datetime_interval
        s104.utils.add_data_from_arrays(input_data.height_dcf3_dcf7_003, trend_003, data_file,
                                        input_data.grid_properties_dcf3_dcf7, data_series_time_003, 7)

        s104.utils.update_metadata(data_file, input_data.grid_properties_dcf3_dcf7, input_data.update_meta_dcf3_dcf7)

        s104.utils.write_data_file(data_file)

        assert os.path.isfile(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.h5")
        h5_file = h5py.File(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.h5", "r")

        assert 'Group_F/WaterLevel' in h5_file
        assert 'Group_F/featureCode' in h5_file
        assert 'WaterLevel/WaterLevel.01/uncertainty' in h5_file
        assert 'WaterLevel/axisNames' in h5_file
        assert 'WaterLevel/WaterLevel.01/Positioning/triangles' in h5_file
        assert h5_file['WaterLevel/WaterLevel.01/Group_001/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf3_dcf7_001)
        assert h5_file['WaterLevel/WaterLevel.01/Group_002/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf3_dcf7_002)
        assert h5_file['WaterLevel/WaterLevel.01/Group_003/values']['waterLevelHeight'] == pytest.approx(input_data.height_dcf3_dcf7_003)
        assert h5_file['WaterLevel/WaterLevel.01/Group_001/values']['waterLevelTrend'] == pytest.approx(input_data.trend_dcf3_dcf7_001)
        assert h5_file['WaterLevel/WaterLevel.01/Group_002/values']['waterLevelTrend'] == pytest.approx(trend_002)
        assert h5_file['WaterLevel/WaterLevel.01/Group_003/values']['waterLevelTrend'] == pytest.approx(trend_003)
        assert h5_file['WaterLevel/WaterLevel.01'].attrs['numberOfNodes'] == input_data.height_dcf3_dcf7_001.size
        assert h5_file['WaterLevel/WaterLevel.01/Positioning/geometryValues']['longitude'] == pytest.approx(input_data.lon)
        assert h5_file['WaterLevel/WaterLevel.01/Positioning/geometryValues']['latitude'] == pytest.approx(input_data.lat)
        assert h5_file.attrs['eastBoundLongitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['maxx'])
        assert h5_file.attrs['westBoundLongitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['minx'])
        assert h5_file.attrs['northBoundLatitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['maxy'])
        assert h5_file.attrs['southBoundLatitude'] == pytest.approx(input_data.grid_properties_dcf3_dcf7['miny'])


def test_to_geotiff(input_data, s104):

    s104_file = s104.api.S104File(f"{current_directory}/test_s104_dcf2_{s104.EDITION}.h5")
    s104_file.to_geotiffs(f"{current_directory}")

    assert os.path.isfile(f"{current_directory}/test_s104_dcf2_{s104.EDITION}_20210901T010000Z.tif")
    assert os.path.isfile(f"{current_directory}/test_s104_dcf2_{s104.EDITION}_20210901T020000Z.tif")

    tif_file1 = gdal.Open(f"{current_directory}/test_s104_dcf2_{s104.EDITION}_20210901T010000Z.tif")
    tif_file2 = gdal.Open(f"{current_directory}/test_s104_dcf2_{s104.EDITION}_20210901T020000Z.tif")

    height_raster = tif_file1.GetRasterBand(1)
    trend_raster = tif_file1.GetRasterBand(2)
    height_array = height_raster.ReadAsArray()
    rows, cols = height_array.shape

    h5_file = h5py.File(f"{current_directory}/test_s104_dcf2_{s104.EDITION}.h5", "r")
    feature_instance = h5_file['/WaterLevel/WaterLevel.01/']

    fillvalue = float(h5_file['Group_F']['WaterLevel']['fillValue'][0])
    values = feature_instance['Group_001/values']
    height = values['waterLevelHeight']
    trend = values['waterLevelTrend']

    assert fillvalue == height_raster.GetNoDataValue()
    assert numpy.min(height) == numpy.min(height_raster.ReadAsArray())
    assert numpy.max(height) == numpy.max(height_raster.ReadAsArray())
    assert numpy.min(trend) == numpy.min(trend_raster.ReadAsArray())
    assert numpy.max(trend) == numpy.max(trend_raster.ReadAsArray())
    assert cols == tif_file1.RasterXSize
    assert rows == tif_file1.RasterYSize


def test_to_gpkg(s104, input_data):
    if s104.EDITION == 1.1:
        s104_dcf7 = s104.api.S104File(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.h5")
        s104_dcf7.to_geopackage(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.gpkg")
        s104_dcf7.to_geopackage()
        assert os.path.isfile(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.gpkg")
        gpkg_file = ogr.Open(f"{current_directory}/test_s104_dcf7_{s104.EDITION}.gpkg")

        s104_dcf3 = s104.api.S104File(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.h5")
        s104_dcf3.to_geopackage(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.gpkg")
        s104_dcf3.to_geopackage()
        assert os.path.isfile(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.gpkg")
        gpkg_file = ogr.Open(f"{current_directory}/test_s104_dcf3_{s104.EDITION}.gpkg")


